{"ast":null,"code":"var _jsxFileName = \"/Users/sguia/Desktop/professional profile/interview/book/src/components/List/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { fetchBooksData } from '../../store/books/actions';\nimport { selectBooksList, selectBooksCount, selectBooksLoadingStatus } from '../../store/books/selectors';\nimport { useAppContext } from '../../context/AppContext';\nimport { BooksList } from '../../assets/constants';\nimport './List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'book_author',\n  label: BooksList.HEADERS[1].toUpperCase(),\n  minWidth: 100\n}, {\n  id: 'book_title',\n  label: BooksList.HEADERS[2].toUpperCase(),\n  minWidth: 100\n}, {\n  id: 'book_publication_year',\n  label: BooksList.HEADERS[3].toUpperCase(),\n  minWidth: 100\n}, {\n  id: 'book_publication_country',\n  label: BooksList.HEADERS[4].toUpperCase(),\n  minWidth: 100\n}, {\n  id: 'book_publication_city',\n  label: BooksList.HEADERS[5].toUpperCase(),\n  minWidth: 100\n}, {\n  id: 'book_pages',\n  label: BooksList.HEADERS[6].toUpperCase(),\n  minWidth: 100\n}];\n\nconst List = () => {\n  _s();\n\n  const context = useAppContext();\n  const dispatch = useDispatch();\n  const booksList = useSelector(selectBooksList);\n  const booksCount = useSelector(selectBooksCount);\n  const isLoading = useSelector(selectBooksLoadingStatus);\n  const [rows, setRows] = useState(booksList || []);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(20);\n\n  const reloadTableData = async (newPage, newNumbPerPage, newFilter) => {\n    const [bookData] = await Promise.all([dispatch(fetchBooksData({\n      pageNum: newPage + 1,\n      numbOfitemsPerPage: newNumbPerPage,\n      searchFilters: newFilter\n    }))]);\n    setRows(bookData.books);\n  };\n\n  const handleSearchField = event => {\n    const updateFilters = event.target.value ? [{\n      type: \"all\",\n      values: [event.target.value]\n    }] : [];\n    context.setInputSearchFilters(updateFilters);\n    reloadTableData(page, rowsPerPage, updateFilters);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    reloadTableData(newPage, rowsPerPage, context.inputSearchFilters);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(+page);\n    reloadTableData(+page, +event.target.value, []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        disabled: isLoading,\n        id: \"filled-basic\",\n        label: \"Seach here\",\n        variant: \"filled\",\n        onChange: handleSearchField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"List\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: '100%',\n          overflow: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          sx: {\n            maxHeight: 600\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            \"aria-label\": \"sticky table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  style: {\n                    minWidth: column.minWidth\n                  },\n                  children: column.label\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  role: \"checkbox\",\n                  tabIndex: -1,\n                  children: columns.map(column => {\n                    const value = row[column.id];\n                    return /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: column.align,\n                      children: column.format && typeof value === 'number' ? column.format(value) : value\n                    }, column.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, row.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 20, 50, 100],\n          component: \"div\",\n          count: booksCount || 0,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"/Gk8vZ+nkQ6ecw7U7OOFN1nJj6U=\", false, function () {\n  return [useAppContext, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/sguia/Desktop/professional profile/interview/book/src/components/List/List.js"],"names":["React","Fragment","useState","useSelector","useDispatch","TextField","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","fetchBooksData","selectBooksList","selectBooksCount","selectBooksLoadingStatus","useAppContext","BooksList","columns","id","label","HEADERS","toUpperCase","minWidth","List","context","dispatch","booksList","booksCount","isLoading","rows","setRows","page","setPage","rowsPerPage","setRowsPerPage","reloadTableData","newPage","newNumbPerPage","newFilter","bookData","Promise","all","pageNum","numbOfitemsPerPage","searchFilters","books","handleSearchField","event","updateFilters","target","value","type","values","setInputSearchFilters","handleChangePage","inputSearchFilters","handleChangeRowsPerPage","width","overflow","maxHeight","map","column","align","slice","row","format"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { fetchBooksData } from '../../store/books/actions';\nimport { selectBooksList, selectBooksCount, selectBooksLoadingStatus } from '../../store/books/selectors';\nimport { useAppContext } from '../../context/AppContext';\nimport { BooksList } from '../../assets/constants';\nimport './List.css';\n\nconst columns = [\n  { id: 'book_author', label: BooksList.HEADERS[1].toUpperCase(), minWidth: 100 },\n  { id: 'book_title', label: BooksList.HEADERS[2].toUpperCase(), minWidth: 100 },\n  { id: 'book_publication_year', label: BooksList.HEADERS[3].toUpperCase(), minWidth: 100 },\n  { id: 'book_publication_country', label: BooksList.HEADERS[4].toUpperCase(), minWidth: 100 },\n  { id: 'book_publication_city', label: BooksList.HEADERS[5].toUpperCase(), minWidth: 100 },\n  { id: 'book_pages', label: BooksList.HEADERS[6].toUpperCase(), minWidth: 100 },\n];\n\nconst List = () => {\n  const context = useAppContext();\n  const dispatch = useDispatch();\n\n  const booksList = useSelector(selectBooksList);\n  const booksCount = useSelector(selectBooksCount);\n  const isLoading = useSelector(selectBooksLoadingStatus);\n\n  const [rows, setRows] = useState(booksList || []);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(20);\n\n  const reloadTableData = async (newPage, newNumbPerPage, newFilter) => {\n    const [bookData] = await Promise.all([dispatch(fetchBooksData({ pageNum: newPage + 1, numbOfitemsPerPage: newNumbPerPage, searchFilters: newFilter }))]);\n    setRows(bookData.books);\n  }\n\n  const handleSearchField = (event) => {\n    const updateFilters = event.target.value ? [{ type: \"all\", values: [event.target.value]}] : [];\n    context.setInputSearchFilters(updateFilters);\n    reloadTableData(page, rowsPerPage, updateFilters);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    reloadTableData(newPage, rowsPerPage, context.inputSearchFilters);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(+page);\n    reloadTableData(+page, +event.target.value, []);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"Search\">\n        <TextField \n          disabled={isLoading}\n          id=\"filled-basic\" \n          label=\"Seach here\" \n          variant=\"filled\"\n          onChange={handleSearchField}\n        />\n      </div>\n      <div className=\"List\">\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n          <TableContainer sx={{ maxHeight: 600 }}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row) => {\n                    return (\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                        {columns.map((column) => {\n                          const value = row[column.id];\n                          return (\n                            <TableCell key={column.id} align={column.align}>\n                              {column.format && typeof value === 'number'\n                                ? column.format(value)\n                                : value}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 20, 50, 100]}\n            component=\"div\"\n            count={booksCount || 0}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}